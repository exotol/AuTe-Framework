{"version":3,"sources":["C:/projects/AT/autotester-ui/src async","C:/projects/AT/autotester-ui/src/app/app.component.html","C:/projects/AT/autotester-ui/src/app/app.component.ts","C:/projects/AT/autotester-ui/src/app/app.module.ts","C:/projects/AT/autotester-ui/src/app/globals.ts","C:/projects/AT/autotester-ui/src/app/mock-service-response/mock-service-response.component.html","C:/projects/AT/autotester-ui/src/app/mock-service-response/mock-service-response.component.ts","C:/projects/AT/autotester-ui/src/app/model/expected-service-request.ts","C:/projects/AT/autotester-ui/src/app/model/mock-service-response.ts","C:/projects/AT/autotester-ui/src/app/model/scenario-group.ts","C:/projects/AT/autotester-ui/src/app/model/scenario.ts","C:/projects/AT/autotester-ui/src/app/model/stand.ts","C:/projects/AT/autotester-ui/src/app/model/step-parameter-set.ts","C:/projects/AT/autotester-ui/src/app/model/step-parameter.ts","C:/projects/AT/autotester-ui/src/app/model/step-result.ts","C:/projects/AT/autotester-ui/src/app/model/step.ts","C:/projects/AT/autotester-ui/src/app/project-detail/project-detail.component.html","C:/projects/AT/autotester-ui/src/app/project-detail/project-detail.component.ts","C:/projects/AT/autotester-ui/src/app/project-list/project-list.component.html","C:/projects/AT/autotester-ui/src/app/project-list/project-list.component.ts","C:/projects/AT/autotester-ui/src/app/project-settings/project-settings.component.html","C:/projects/AT/autotester-ui/src/app/project-settings/project-settings.component.ts","C:/projects/AT/autotester-ui/src/app/scenario-detail/scenario-detail.component.html","C:/projects/AT/autotester-ui/src/app/scenario-detail/scenario-detail.component.ts","C:/projects/AT/autotester-ui/src/app/scenario-list-item/scenario-list-item.component.html","C:/projects/AT/autotester-ui/src/app/scenario-list-item/scenario-list-item.component.ts","C:/projects/AT/autotester-ui/src/app/scenario-settings/scenario-settings.component.html","C:/projects/AT/autotester-ui/src/app/scenario-settings/scenario-settings.component.ts","C:/projects/AT/autotester-ui/src/app/service/project.service.ts","C:/projects/AT/autotester-ui/src/app/service/scenario.service.ts","C:/projects/AT/autotester-ui/src/app/service/step.service.ts","C:/projects/AT/autotester-ui/src/app/service/version.service.ts","C:/projects/AT/autotester-ui/src/app/step-item/step-item.component.html","C:/projects/AT/autotester-ui/src/app/step-item/step-item.component.ts","C:/projects/AT/autotester-ui/src/app/step-parameter-set/step-parameter-set.component.html","C:/projects/AT/autotester-ui/src/app/step-parameter-set/step-parameter-set.component.ts","C:/projects/AT/autotester-ui/src/app/step-result-item/step-result-item.component.html","C:/projects/AT/autotester-ui/src/app/step-result-item/step-result-item.component.ts","C:/projects/AT/autotester-ui/src/environments/environment.ts","C:/projects/AT/autotester-ui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-default\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BSC AutoTester</a>\\r\\n    </div>\\r\\n    <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li [routerLinkActive]=\\\"'active'\\\"><a [routerLink]=\\\"['/']\\\">Projects</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<div class=\\\"help-block\\\" *ngIf=\\\"version\\\">{{version.implementationVersion}} {{version.implementationDate}}</div>\\r\\n<ng2-toasty [position]=\\\"'top-right'\\\"></ng2-toasty>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\r\nimport {VersionService} from './service/version.service';\r\nimport {Version} from './model/version';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  public version: Version;\r\n\r\n  constructor(private versionService: VersionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.versionService.getVersion().subscribe(version => this.version = version);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {ToastyModule} from 'ng2-toasty';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { ProjectListComponent } from './project-list/project-list.component';\r\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\r\nimport { ScenarioDetailComponent } from './scenario-detail/scenario-detail.component';\r\nimport {ProjectService} from './service/project.service';\r\nimport {HttpModule} from '@angular/http';\r\nimport { ScenarioListItemComponent } from './scenario-list-item/scenario-list-item.component';\r\nimport {ScenarioService} from './service/scenario.service';\r\nimport {StepService} from './service/step.service';\r\nimport { StepResultItemComponent } from './step-result-item/step-result-item.component';\r\nimport { StepItemComponent } from './step-item/step-item.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { MockServiceResponseComponent } from './mock-service-response/mock-service-response.component';\r\nimport { StepParameterSetComponent } from './step-parameter-set/step-parameter-set.component';\r\nimport {Globals} from './globals';\r\nimport { ProjectSettingsComponent } from './project-settings/project-settings.component';\r\nimport { ScenarioSettingsComponent } from './scenario-settings/scenario-settings.component';\r\nimport {VersionService} from './service/version.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ProjectListComponent },\r\n  { path: 'project/:id', component: ProjectDetailComponent },\r\n  { path: 'project/:id/settings', component: ProjectSettingsComponent },\r\n  { path: 'scenario/:id', component: ScenarioDetailComponent },\r\n  { path: 'scenario/:id/settings', component: ScenarioSettingsComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProjectListComponent,\r\n    ProjectDetailComponent,\r\n    ScenarioDetailComponent,\r\n    ScenarioListItemComponent,\r\n    StepResultItemComponent,\r\n    StepItemComponent,\r\n    MockServiceResponseComponent,\r\n    StepParameterSetComponent,\r\n    ProjectSettingsComponent,\r\n    ScenarioSettingsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    ToastyModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  providers: [ProjectService, ScenarioService, StepService, VersionService, Globals],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/app.module.ts","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Globals {\r\n  serviceBaseUrl = '/autotester-rest-master';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/globals.ts","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <input class=\\\"form-control\\\" placeholder=\\\"Service URL\\\" title=\\\"\\\" [(ngModel)]=\\\"mockServiceResponse.serviceUrl\\\"/>\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <input class=\\\"form-control\\\" placeholder=\\\"HTTP-status: 200, 404, 500, [empty]\\\" title=\\\"\\\" [(ngModel)]=\\\"mockServiceResponse.httpStatus\\\"/>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <input class=\\\"form-control\\\" placeholder=\\\"Sort\\\" title=\\\"\\\" [(ngModel)]=\\\"mockServiceResponse.sort\\\"/>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <label>Response body</label>\\n      <textarea class=\\\"form-control\\\" placeholder=\\\"Response body\\\" title=\\\"\\\" rows=\\\"7\\\" [(ngModel)]=\\\"mockServiceResponse.responseBody\\\"></textarea>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/mock-service-response/mock-service-response.component.html\n// module id = ../../../../../src/app/mock-service-response/mock-service-response.component.html\n// module chunks = 1","import {Component, Input, OnInit} from '@angular/core';\nimport {MockServiceResponse} from '../model/mock-service-response';\n\n@Component({\n  selector: 'app-mock-service-response',\n  templateUrl: './mock-service-response.component.html'\n})\nexport class MockServiceResponseComponent implements OnInit {\n\n  @Input()\n  mockServiceResponse: MockServiceResponse;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/mock-service-response/mock-service-response.component.ts","export class ExpectedServiceRequest {\n  id: number;\n  serviceName: string;\n  expectedServiceRequest: string;\n  sort: number;\n  ignoredTags: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/expected-service-request.ts","export class MockServiceResponse {\n  id: number;\n  sort: number;\n  serviceUrl: string;\n  responseBody: string;\n  httpStatus: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/mock-service-response.ts","export class ScenarioGroup {\n  id: number;\n  name: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/scenario-group.ts","import {ScenarioGroup} from './scenario-group';\nimport {StepResult} from './step-result';\nimport {Step} from './step';\nimport {Stand} from './stand';\n\nexport class Scenario {\n  id: number;\n  projectId: number;\n  projectName: string;\n  projectStand: Stand;\n  name: string;\n  scenarioGroup: ScenarioGroup;\n  stepResults: StepResult[];\n  lastRunAt: Date;\n  lastRunFailures: number;\n\n  beforeScenarioIgnore: boolean;\n  beforeScenarioId: Number;\n  afterScenarioIgnore: boolean;\n  afterScenarioId: Number;\n\n  steps: Step[];\n  stand: Stand;\n\n  _selected = false;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/scenario.ts","export class Stand {\r\n  id: Number;\r\n  serviceUrl: string;\r\n  dbUrl: string;\r\n  dbUser: string;\r\n  dbPassword: string;\r\n  wireMockUrl: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/stand.ts","import {StepParameter} from './step-parameter';\n\nexport class StepParameterSet {\n  id: number;\n  sort: number;\n  stepParameterList: StepParameter[];\n  description: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/step-parameter-set.ts","export class StepParameter {\n  id: number;\n  name: string;\n  value: string;\n\n  constructor(name?: string) {\n    if (name) {\n      this.name = name;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/step-parameter.ts","import {Step} from './step';\n\nexport class StepResult {\n  testId: String;\n  step: Step;\n  result: string;\n\n  details: string;\n  expected: string;\n  actual: string;\n  requestUrl: string;\n  requestBody: string;\n  pollingRetryCount: number;\n  savedParameters: string;\n  description: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/step-result.ts","import {ExpectedServiceRequest} from './expected-service-request';\r\nimport {MockServiceResponse} from './mock-service-response';\r\nimport {StepParameterSet} from './step-parameter-set';\r\n\r\nexport class Step {\r\n  id: number;\r\n  expectedServiceRequestList: ExpectedServiceRequest[];\r\n  sort: number;\r\n  relativeUrl: string;\r\n  requestMethod: string;\r\n  request: string;\r\n  requestHeaders: string;\r\n  expectedResponse: string;\r\n  expectedResponseIgnore: boolean;\r\n  savingValues: string;\r\n  responses: string;\r\n  dbParams: string;\r\n  tmpServiceRequestsDirectory: string;\r\n  expectedStatusCode: number;\r\n  sql: string;\r\n  sqlSavedParameter: string;\r\n  jsonXPath: string;\r\n  requestBodyType: string;\r\n  usePolling: boolean;\r\n  pollingJsonXPath: string;\r\n  mockServiceResponseList: MockServiceResponse[];\r\n  disabled: boolean;\r\n  stepComment: string;\r\n  savedValuesCheck: any = {};\r\n  stepParameterSetList: StepParameterSet[] = [];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/model/step.ts","module.exports = \"<ng-container *ngIf=\\\"project\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/'\\\">Projects</a></li>\\r\\n    <li class=\\\"breadcrumb-item active\\\">{{project.id}}. {{project.name}}</li>\\r\\n  </ol>\\r\\n\\r\\n  <h4>{{project.name}}</h4>\\r\\n  <a [routerLink]=\\\"['/project/' + project.id + '/settings']\\\">Settings</a>\\r\\n\\r\\n  <nav aria-label=\\\"Scenario groups\\\">\\r\\n    <ul class=\\\"pagination\\\">\\r\\n      <li [class.active]=\\\"!filter\\\">\\r\\n        <a href=\\\"#\\\" (click)=\\\"selectAllGroups()\\\">All</a>\\r\\n      </li>\\r\\n      <li [class.active]=\\\"filter && !filter.scenarioGroup\\\">\\r\\n        <a href=\\\"#\\\" (click)=\\\"selectGroup()\\\">Without group</a>\\r\\n      </li>\\r\\n      <li [class.active]=\\\"filter && scenarioGroup == filter.scenarioGroup\\\" *ngFor=\\\"let scenarioGroup of project.scenarioGroups\\\">\\r\\n        <a href=\\\"#\\\" (click)=\\\"selectGroup(scenarioGroup)\\\">{{scenarioGroup.name}}</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"background-color: #f5f5f5; padding-top: 10px;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div style=\\\"height: 40px;\\\" class=\\\"col-sm-6\\\">\\r\\n        <label>\\r\\n          <input class=\\\"select-all\\\" type=\\\"checkbox\\\" title=\\\"Select\\\" (click)=\\\"selectAll()\\\" />\\r\\n        </label>\\r\\n        <button class=\\\"btn btn-sm btn-default\\\" (click)=\\\"executeSelectedScenarios()\\\">Execute selected scenarios</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\" style=\\\"font-weight: bold;\\\" [style.color]=\\\"failCount > 0 ? 'red' : ''\\\">\\r\\n        {{failCount}}\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"progress\\\" style=\\\"background-color: #fff;\\\">\\r\\n          <div class=\\\"progress-bar progress-bar-striped\\\"\\r\\n               role=\\\"progressbar\\\"\\r\\n               [class.active]=\\\"executingStateExecuting > 0\\\"\\r\\n               [style.display]=\\\"(executingStateExecuting + executingStateFinished) > 0 ? '' : 'none'\\\"\\r\\n               [style.width]=\\\"(5 + executingStateFinished / (executingStateExecuting + executingStateFinished) * 95) + '%'\\\">\\r\\n            {{Math.round(executingStateFinished / (executingStateExecuting + executingStateFinished) * 100)}} %\\r\\n            {{executingStateExecuting > 0 ? '(left: ' + executingStateExecuting + ')' : ''}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\"min-height: 33px; margin-top: 7px; margin-bottom: 25px;\\\" [style.display]=\\\"isDisplayScenario(scenario) ? '' : 'none'\\\" *ngFor=\\\"let scenario of scenarioList\\\">\\r\\n    <app-scenario-list-item [scenario]=\\\"scenario\\\" (onStateChange)=\\\"onStateChange($event, scenario)\\\"></app-scenario-list-item>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <a class=\\\"btn btn-default\\\" target=\\\"_blank\\\" [attr.href]=\\\"globals.serviceBaseUrl + '/rest/projects/' + project.id + '/get-yaml'\\\">Download project as YAML</a>\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"downloadSelectedAsYaml()\\\">Download selected scenarios as YAML</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <label>Create new scenario</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input placeholder=\\\"Scenario name\\\" class=\\\"form-control\\\" title=\\\"New scenario name\\\" [(ngModel)]=\\\"newScenarioName\\\" />\\r\\n          <span class=\\\"input-group-btn\\\">\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"saveNewScenario()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Create</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ng-container>\\r\\n<div class=\\\"help-block\\\" *ngIf=\\\"!project\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-time\\\"></span>\\r\\n  Loading...\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/project-detail/project-detail.component.html\n// module id = ../../../../../src/app/project-detail/project-detail.component.html\n// module chunks = 1","import {AfterContentChecked, Component, OnInit, QueryList, ViewChildren} from '@angular/core';\r\nimport {ProjectService} from '../service/project.service';\r\nimport {Project} from '../model/project';\r\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport {Scenario} from '../model/scenario';\r\nimport {ScenarioGroup} from '../model/scenario-group';\r\nimport {Globals} from '../globals';\r\nimport {ScenarioListItemComponent} from '../scenario-list-item/scenario-list-item.component';\r\nimport { saveAs } from 'file-saver/FileSaver';\r\n\r\n@Component({\r\n  selector: 'app-project-detail',\r\n  templateUrl: './project-detail.component.html',\r\n  styles: ['input.select-all { width: 24px; height: 24px; margin: 0; vertical-align: middle; }']\r\n})\r\nexport class ProjectDetailComponent implements OnInit, AfterContentChecked {\r\n\r\n  project: Project;\r\n  scenarioList: Scenario[];\r\n  filter: Scenario;\r\n  selectAllFlag = false;\r\n  failCount = 0;\r\n  Math: any;\r\n  newScenarioName = '';\r\n\r\n  @ViewChildren(ScenarioListItemComponent) scenarioComponentList: QueryList<ScenarioListItemComponent>;\r\n  executingStateExecuting = 0;\r\n  executingStateFinished = 0;\r\n\r\n  constructor(\r\n    public globals: Globals,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private projectService: ProjectService\r\n  ) {\r\n    this.Math = Math;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.projectService.findOne(+params.get('id')))\r\n      .subscribe(value => {\r\n        this.project = value;\r\n\r\n        this.route\r\n          .queryParams\r\n          .subscribe(params => {\r\n            if (+params['scenarioGroupId']) {\r\n              this.filter = new Scenario();\r\n              this.filter.scenarioGroup =\r\n                this.project.scenarioGroups\r\n                  .find(scenarioGroup => scenarioGroup.id === +params['scenarioGroupId']);\r\n            }\r\n          });\r\n      });\r\n\r\n    this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.projectService.findScenariosByProject(+params.get('id')))\r\n      .subscribe(value => this.scenarioList = value);\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.updateFailCountSum();\r\n  }\r\n\r\n  selectGroup(scenarioGroup?: ScenarioGroup): boolean {\r\n    this.filter = new Scenario();\r\n    this.filter.scenarioGroup = scenarioGroup;\r\n\r\n    this.router.navigate([], {queryParams: {scenarioGroupId: scenarioGroup ? scenarioGroup.id : -1}});\r\n    this.updateFailCountSum();\r\n\r\n    return false;\r\n  }\r\n\r\n  selectAllGroups(): boolean {\r\n    this.filter = null;\r\n\r\n    this.router.navigate([]);\r\n    this.updateFailCountSum();\r\n\r\n    return false;\r\n  }\r\n\r\n  downloadSelectedAsYaml() {\r\n    const selectedScenarios = this.scenarioList\r\n      .filter(value => this.isSelectedScenario(value))\r\n      .map(value => value.id);\r\n    this.projectService.downloadYaml(this.project, selectedScenarios)\r\n      .subscribe(res => saveAs(res, 'PROJECT_' + this.project.projectCode + '.yml'))\r\n  }\r\n\r\n  isSelectedScenario(scenario: Scenario) {\r\n    return scenario && scenario._selected && this.isDisplayScenario(scenario);\r\n  }\r\n\r\n  isDisplayScenario(scenario: Scenario) {\r\n    return !this.filter ||\r\n      (!this.filter.scenarioGroup && !scenario.scenarioGroup) ||\r\n      (this.filter.scenarioGroup && scenario && scenario.scenarioGroup &&\r\n          scenario.scenarioGroup.id === this.filter.scenarioGroup.id\r\n      );\r\n  }\r\n\r\n  executeSelectedScenarios() {\r\n    this.scenarioComponentList\r\n      .filter(item => item.scenario._selected && this.isDisplayScenario(item.scenario))\r\n      .forEach(value => value.runScenario());\r\n  }\r\n\r\n  selectAll() {\r\n    this.selectAllFlag = !this.selectAllFlag;\r\n    this.scenarioComponentList.forEach(item => item.scenario._selected = this.selectAllFlag);\r\n  }\r\n\r\n  updateFailCountSum() {\r\n    if (this.scenarioList) {\r\n      this.failCount = this.scenarioList\r\n        .filter(item => this.isDisplayScenario(item))\r\n        .map(value => value.lastRunFailures)\r\n        .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\r\n    } else {\r\n      this.failCount = 0;\r\n    }\r\n    return this.failCount;\r\n  }\r\n\r\n  updateExecutionStatus() {\r\n    this.executingStateExecuting = this.scenarioComponentList\r\n      .filter(item => item.state === 'executing')\r\n      .length;\r\n    this.executingStateFinished = this.scenarioComponentList\r\n      .filter(item => item.state === 'finished')\r\n      .length;\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  onStateChange(event: any, scenario: Scenario) {\r\n    this.updateExecutionStatus();\r\n  }\r\n\r\n  saveNewScenario() {\r\n    const newScenario = new Scenario();\r\n    newScenario.name = this.newScenarioName;\r\n\r\n    this.projectService.createScenario(this.project, newScenario)\r\n      .subscribe(savedScenario => {\r\n        this.scenarioList.push(savedScenario);\r\n        this.newScenarioName = '';\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/project-detail/project-detail.component.ts","module.exports = \"<h4>Projects</h4>\\r\\n<div class=\\\"help-block\\\" *ngIf=\\\"!projectList\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-time\\\"></span>\\r\\n  Loading...\\r\\n</div>\\r\\n<table class=\\\"table table-condensed\\\" *ngIf=\\\"projectList\\\">\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let project of projectList\\\">\\r\\n      <td>\\r\\n        <a [routerLink]=\\\"['/project', project.id]\\\">{{project.name}}</a>\\r\\n      </td>\\r\\n      <td>\\r\\n        <ng-container *ngIf=\\\"project.stand\\\">\\r\\n          {{project.stand.serviceUrl}}\\r\\n        </ng-container>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/project-list/project-list.component.html\n// module id = ../../../../../src/app/project-list/project-list.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport {Project} from '../model/project';\nimport {ProjectService} from '../service/project.service';\n\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html'\n})\nexport class ProjectListComponent implements OnInit {\n\n  projectList: Project[];\n\n  constructor(\n    private projectService: ProjectService\n  ) { }\n\n  ngOnInit() {\n    this.projectService.findAll().subscribe(value => this.projectList = value);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/project-list/project-list.component.ts","module.exports = \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/'\\\">Projects</a></li>\\r\\n  <li *ngIf=\\\"project\\\" class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/project', project.id]\\\">{{project.id}}. {{project.name}}</a></li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Settings</li>\\r\\n</ol>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"project\\\">\\r\\n  <h3>{{project.name}}</h3>\\r\\n  <button class=\\\"btn btn-success\\\" style=\\\"margin-bottom: 15px;\\\" (click)=\\\"save()\\\">Save project settings</button>\\r\\n  <div>\\r\\n    <ul class=\\\"nav nav-tabs\\\">\\r\\n      <li [class.active]=\\\"tab == 'details'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('details')\\\">Details</a></li>\\r\\n      <li [class.active]=\\\"tab == 'groups'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('groups')\\\">Scenario groups</a></li>\\r\\n      <li [class.active]=\\\"tab == 'stands'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('stands')\\\">Stands</a></li>\\r\\n      <li [class.active]=\\\"tab == 'json'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('json')\\\">json</a></li>\\r\\n    </ul>\\r\\n    <div class=\\\"tab-content\\\" style=\\\"padding: 10px;\\\">\\r\\n      <div [style.display]=\\\"tab == 'details' ? '' : 'none'\\\">\\r\\n        <label>Project name</label>\\r\\n        <input class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"project.name\\\"/>\\r\\n\\r\\n        <label>Before scenario</label>\\r\\n        <select class=\\\"form-control\\\" title=\\\"Before scenario\\\" [(ngModel)]=\\\"project.beforeScenarioId\\\">\\r\\n          <option [ngValue]=\\\"null\\\">disabled</option>\\r\\n          <option *ngFor=\\\"let scenario of scenarioList\\\" [ngValue]=\\\"scenario.id\\\">{{scenario.name}}</option>\\r\\n        </select>\\r\\n\\r\\n        <label>After scenario</label>\\r\\n        <select class=\\\"form-control\\\" title=\\\"Before scenario\\\" [(ngModel)]=\\\"project.afterScenarioId\\\">\\r\\n          <option [ngValue]=\\\"null\\\">disabled</option>\\r\\n          <option *ngFor=\\\"let scenario of scenarioList\\\" [ngValue]=\\\"scenario.id\\\">{{scenario.name}}</option>\\r\\n        </select>\\r\\n\\r\\n        <label>Project code</label>\\r\\n        <input class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"project.projectCode\\\"/>\\r\\n\\r\\n        <label style=\\\"margin-top: 8px;\\\">\\r\\n          <input type=\\\"checkbox\\\" style=\\\"height: 25px;\\\" title=\\\"\\\" [(ngModel)]=\\\"project.useRandomTestId\\\"/>\\r\\n          Use random testId\\r\\n        </label>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n        <label>testId header name</label>\\r\\n        <input class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"project.testIdHeaderName\\\"/>\\r\\n      </div>\\r\\n      <div [style.display]=\\\"tab == 'groups' ? '' : 'none'\\\">\\r\\n        <div *ngFor=\\\"let scenarioGroup of project.scenarioGroups\\\">\\r\\n          <label>Group name</label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <input class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"scenarioGroup.name\\\"/>\\r\\n            <span class=\\\"input-group-btn\\\">\\r\\n              <button class=\\\"btn btn-default\\\" (click)=\\\"removeScenarioGroup(scenarioGroup)\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span> Remove</button>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-default\\\" style=\\\"margin-top: 7px;\\\" (click)=\\\"addScenarioGroup()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add scenario group</button>\\r\\n      </div>\\r\\n      <div [style.display]=\\\"tab == 'stands' ? '' : 'none'\\\">\\r\\n        <div style=\\\"border: none;\\\" class=\\\"list-group-item\\\" *ngFor=\\\"let stand of project.standList\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <label>Service URL</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input placeholder=\\\"Service URL\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"stand.serviceUrl\\\"/>\\r\\n                <span class=\\\"input-group-btn\\\">\\r\\n                  <button class=\\\"btn btn-default\\\" *ngIf=\\\"project.stand && stand.id && project.stand.id != stand.id\\\" (click)=\\\"selectAsDefaultStand(stand)\\\">Set as default</button>\\r\\n                  <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!(project.stand && project.stand.id != stand.id)\\\" disabled>Used by default</button>\\r\\n\\r\\n                  <button class=\\\"btn\\\" (click)=\\\"removeStand(stand)\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span> Remove</button>\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <input placeholder=\\\"Data base URL\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"stand.dbUrl\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <input placeholder=\\\"Data base User\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"stand.dbUser\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <input placeholder=\\\"Data base Password\\\" type=\\\"password\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"stand.dbPassword\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input placeholder=\\\"WireMock URL\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"stand.wireMockUrl\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"border: none;\\\" class=\\\"list-group-item\\\">\\r\\n          <button class=\\\"btn btn-default\\\" (click)=\\\"addStand()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add stand</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div [style.display]=\\\"tab == 'json' ? '' : 'none'\\\">\\r\\n        <pre>{{project | json}}</pre>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/project-settings/project-settings.component.html\n// module id = ../../../../../src/app/project-settings/project-settings.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport {Project} from '../model/project';\nimport {ProjectService} from '../service/project.service';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {ScenarioGroup} from '../model/scenario-group';\nimport {Stand} from '../model/stand';\nimport {Scenario} from '../model/scenario';\nimport {ToastOptions, ToastyService} from 'ng2-toasty';\n\n@Component({\n  selector: 'app-project-settings',\n  templateUrl: './project-settings.component.html',\n  styles: [\n    '.tab-content { border: 1px solid #ddd; border-top-width: 0;}',\n    '.row {margin-bottom: 4px;}',\n    'input[type=checkbox] { width: 24px; height: 24px; margin: 0; vertical-align: middle; }'\n  ]\n})\nexport class ProjectSettingsComponent implements OnInit {\n\n  project: Project;\n\n  tab = 'details';\n  scenarioList: Scenario[];\n\n  private toastOptions: ToastOptions = {\n    title: 'Updated',\n    msg: 'Project settings updated',\n    showClose: true,\n    timeout: 5000,\n    theme: 'bootstrap'\n  };\n\n  constructor(\n    private projectService: ProjectService,\n    private route: ActivatedRoute,\n    private toastyService: ToastyService\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .switchMap((params: ParamMap) => this.projectService.findOne(+params.get('id')))\n      .subscribe(value => {\n        this.project = value;\n\n        this.projectService.findScenariosByProject(this.project.id)\n          .subscribe(scenarioList => this.scenarioList = scenarioList);\n      });\n  }\n\n  save(): void {\n    this.projectService.save(this.project)\n      .subscribe(value => {\n        this.project = value;\n        this.toastyService.success(this.toastOptions)\n      });\n  }\n\n  selectTab(tabName: string): boolean {\n    this.tab = tabName;\n    return false;\n  }\n\n  removeScenarioGroup(scenarioGroup: ScenarioGroup): void {\n    const indexToRemove = this.project.scenarioGroups.indexOf(scenarioGroup);\n    if (indexToRemove > -1) {\n      this.project.scenarioGroups.splice(indexToRemove, 1);\n    }\n  }\n\n  addScenarioGroup(): void {\n    if (!this.project.scenarioGroups) {\n      this.project.scenarioGroups = [];\n    }\n    this.project.scenarioGroups.push(new ScenarioGroup());\n  }\n\n  selectAsDefaultStand(stand: Stand): void {\n    this.project.stand = stand;\n  }\n\n  addStand(): void {\n    if (!this.project.standList) {\n      this.project.standList = [];\n    }\n    this.project.standList.push(new Stand());\n  }\n\n  removeStand(stand: Stand): void {\n    const indexToRemove = this.project.standList.indexOf(stand);\n    if (indexToRemove > -1) {\n      this.project.standList.splice(indexToRemove, 1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/project-settings/project-settings.component.ts","module.exports = \"<div>\\r\\n  <ol class=\\\"breadcrumb\\\" *ngIf=\\\"scenario\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/'\\\">Projects</a></li>\\r\\n    <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/project', scenario.projectId]\\\">{{scenario.projectId}}. {{scenario.projectName}}</a></li>\\r\\n    <li class=\\\"breadcrumb-item\\\" *ngIf=\\\"scenario.scenarioGroup\\\">\\r\\n      <a [routerLink]=\\\"['/project', scenario.projectId]\\\" [queryParams]=\\\"{scenarioGroupId: scenario.scenarioGroup.id}\\\">{{scenario.scenarioGroup.name}}</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item active\\\">{{scenario.id}}. {{scenario.name}}</li>\\r\\n  </ol>\\r\\n\\r\\n  <div *ngIf=\\\"scenario\\\">\\r\\n    <div style=\\\"margin-bottom: 10px;\\\">\\r\\n      <h3>{{scenario.name}}</h3>\\r\\n      <a [routerLink]=\\\"['/scenario/' + scenario.id + '/settings']\\\">Settings</a>\\r\\n    </div>\\r\\n    <app-scenario-list-item [scenario]=\\\"scenario\\\"></app-scenario-list-item>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"help-block\\\" *ngIf=\\\"!stepList\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-time\\\"></span>\\r\\n    Loading...\\r\\n  </div>\\r\\n  <div *ngIf=\\\"scenario && stepList\\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"saveSteps()\\\">Save steps</button>\\r\\n    </div>\\r\\n\\r\\n    <div *ngFor=\\\"let step of stepList\\\">\\r\\n      <div style=\\\"margin-bottom: 15px;\\\" class=\\\"col-sm-offset-11 col-sm-1 text-right\\\">\\r\\n        <button style=\\\"white-space: normal;\\\" class=\\\"btn btn-xs btn-block btn-default\\\" (click)=\\\"addStepBefore(step)\\\"><span class=\\\"glyphicon glyphicon-hand-left\\\"></span> Insert step</button>\\r\\n      </div>\\r\\n      <app-step-item\\r\\n        [step]=\\\"step\\\"\\r\\n        [showUpDownDeleteCloneButtons]=\\\"true\\\"\\r\\n        (onDeleteClick)=\\\"onDeleteClick(step)\\\"\\r\\n        (onUpClick)=\\\"onUpClick(step)\\\"\\r\\n        (onDownClick)=\\\"onDownClick(step)\\\"\\r\\n        (onCloneClick)=\\\"onCloneClick(step)\\\"\\r\\n      ></app-step-item>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"addStep()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add step</button>\\r\\n    </div>\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"saveSteps()\\\">Save steps</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/scenario-detail/scenario-detail.component.html\n// module id = ../../../../../src/app/scenario-detail/scenario-detail.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport {Scenario} from '../model/scenario';\nimport {Step} from '../model/step';\nimport {ScenarioService} from '../service/scenario.service';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport 'rxjs/add/operator/switchMap';\nimport {ToastOptions, ToastyService} from 'ng2-toasty';\nimport {StepService} from '../service/step.service';\n\n@Component({\n  selector: 'app-scenario-detail',\n  templateUrl: './scenario-detail.component.html'\n})\nexport class ScenarioDetailComponent implements OnInit {\n\n  scenario: Scenario;\n  stepList: Step[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private scenarioService: ScenarioService,\n    private stepService: StepService,\n    private toastyService: ToastyService\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .switchMap((params: ParamMap) => this.scenarioService.findOne(+params.get('id')))\n      .subscribe(value => this.scenario = value);\n\n    this.route.paramMap\n      .switchMap((params: ParamMap) => this.scenarioService.findScenarioSteps(+params.get('id')))\n      .subscribe(value => this.stepList = value);\n  }\n\n  saveSteps() {\n    if (this.scenario && this.stepList) {\n      this.scenarioService.saveStepList(this.scenario, this.stepList)\n        .subscribe(savedStepList => {\n          const toastOptions: ToastOptions = {\n            title: 'Updated',\n            msg: 'Steps updated',\n            showClose: true,\n            timeout: 5000,\n            theme: 'bootstrap'\n          };\n          this.toastyService.success(toastOptions);\n          this.stepList = savedStepList;\n        });\n    }\n  }\n\n  addStep() {\n    if (!this.stepList) {\n      this.stepList = [];\n    }\n    const newStep = new Step();\n    const maxSort = Math.max.apply(null, this.stepList.map(value => value.sort));\n    newStep.sort = Number.isInteger(maxSort) ? maxSort + 50 : 50;\n    this.stepList.push(newStep);\n  }\n\n  onDeleteClick(step: Step) {\n    if (confirm('Confirm: delete step')) {\n      const indexToRemove = this.stepList.indexOf(step);\n      if (indexToRemove > -1) {\n        this.stepList.splice(indexToRemove, 1);\n      }\n    }\n  }\n\n  addStepBefore(step: Step) {\n    const addAfterIndex = this.stepList.indexOf(step);\n    if (addAfterIndex > -1) {\n      const newStep = new Step();\n      newStep.sort = step.sort;\n\n      this.stepList\n        .filter(value => value.sort >= step.sort)\n        .forEach(value => value.sort += 50);\n\n      this.stepList.splice(addAfterIndex, 0, newStep);\n    }\n  }\n\n  onUpClick(step: Step) {\n    const index = this.stepList.indexOf(step);\n    if (index > 0) {\n      const topSort = this.stepList[index - 1].sort;\n      this.stepList[index - 1].sort = step.sort;\n      step.sort = topSort;\n\n      const tmpStep = this.stepList[index];\n      this.stepList[index] = this.stepList[index - 1];\n      this.stepList[index - 1] = tmpStep;\n    }\n  }\n\n  onDownClick(step: Step) {\n    const index = this.stepList.indexOf(step);\n    if (index > -1 && index < this.stepList.length - 1) {\n      const bottomSort = this.stepList[index + 1].sort;\n      this.stepList[index + 1].sort = step.sort;\n      step.sort = bottomSort;\n\n      const tmpStep = this.stepList[index];\n      this.stepList[index] = this.stepList[index + 1];\n      this.stepList[index + 1] = tmpStep;\n    }\n  }\n\n  onCloneClick(step: Step) {\n    if (confirm('Confirm: Clone step')) {\n      this.stepService.cloneStep(step)\n        .subscribe(clonedStep => {\n          const maxSort = Math.max.apply(null, this.stepList.map(value => value.sort));\n          clonedStep.sort = Number.isInteger(maxSort) ? maxSort + 50 : 50;\n          this.stepList.push(clonedStep);\n          const toastOptions: ToastOptions = {\n            title: 'Cloned',\n            msg: 'Step cloned and appended to the end',\n            showClose: true,\n            timeout: 15000,\n            theme: 'bootstrap'\n          };\n          this.toastyService.success(toastOptions);\n        });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/scenario-detail/scenario-detail.component.ts","module.exports = \"<div class=\\\"container-fluid\\\" *ngIf=\\\"scenario\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n      <label>\\r\\n        <input type=\\\"checkbox\\\" title=\\\"Select\\\" [(ngModel)]=\\\"scenario._selected\\\" />\\r\\n        {{scenario.name}}\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\">{{scenario.lastRunAt | date: 'y-MM-dd HH:mm'}}</div>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n      <div [style.color]=\\\"scenario.lastRunFailures > 0 ? 'red' : ''\\\">{{scenario.lastRunFailures}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" *ngIf=\\\"state != 'executing'\\\" (click)=\\\"runScenario()\\\">Run</button>\\r\\n      <button class=\\\"btn btn-warning\\\" *ngIf=\\\"state == 'executing'\\\" disabled>Executing...</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button class=\\\"btn btn-\\\" *ngIf=\\\"stepResultList\\\" (click)=\\\"resultDetailsToggle()\\\">Show results</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n      <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/scenario', scenario.id]\\\">Edit</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"showResultDetails && stepResultList\\\">\\r\\n    <ng-container *ngFor=\\\"let stepResult of stepResultList\\\">\\r\\n      <app-step-result-item [stepResult]=\\\"stepResult\\\"></app-step-result-item>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/scenario-list-item/scenario-list-item.component.html\n// module id = ../../../../../src/app/scenario-list-item/scenario-list-item.component.html\n// module chunks = 1","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Scenario} from '../model/scenario';\r\nimport {ScenarioService} from '../service/scenario.service';\r\nimport {StepResult} from '../model/step-result';\r\n\r\n@Component({\r\n  selector: 'app-scenario-list-item',\r\n  templateUrl: './scenario-list-item.component.html',\r\n  styles: [' input[type=checkbox] { width: 24px; height: 24px; margin: 0; vertical-align: middle; }']\r\n})\r\nexport class ScenarioListItemComponent implements OnInit {\r\n\r\n  @Input()\r\n  scenario: Scenario;\r\n  @Output() onStateChange = new EventEmitter<any>();\r\n\r\n  stepResultList: StepResult[];\r\n\r\n  state = 'none';\r\n  showResultDetails = false;\r\n\r\n  constructor(\r\n    private scenarioService: ScenarioService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.scenario._selected = this.scenario.lastRunFailures !== 0;\r\n  }\r\n\r\n  stateChanged() {\r\n    this.onStateChange.emit({state: this.state})\r\n  }\r\n\r\n  runScenario() {\r\n    if (this.state !== 'executing') {\r\n      this.state = 'executing';\r\n      this.stateChanged();\r\n      this.scenarioService.run(this.scenario)\r\n        .subscribe(value => { this.stepResultList = value; this.state = 'finished'; this.stateChanged(); });\r\n    }\r\n  }\r\n\r\n  resultDetailsToggle() {\r\n    this.showResultDetails = !this.showResultDetails;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/scenario-list-item/scenario-list-item.component.ts","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/'\\\">Projects</a></li>\\n  <li *ngIf=\\\"project\\\" class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/project', project.id]\\\">{{project.id}}. {{project.name}}</a></li>\\n  <li class=\\\"breadcrumb-item\\\" *ngIf=\\\"scenario && scenario.scenarioGroup && project\\\">\\n    <a [routerLink]=\\\"['/project', scenario.projectId]\\\" [queryParams]=\\\"{scenarioGroupId: scenario.scenarioGroup.id}\\\">{{scenario.scenarioGroup.name}}</a>\\n  </li>\\n  <li *ngIf=\\\"scenario\\\" class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/scenario', scenario.id]\\\">{{scenario.id}}. {{scenario.name}}</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Settings</li>\\n</ol>\\n\\n<div *ngIf=\\\"scenario\\\">\\n  <button style=\\\"margin: 15px;\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Save scenario settings</button>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <label>Name</label>\\n      </div>\\n      <div class=\\\"col-sm-9\\\">\\n        <input class=\\\"form-control\\\" title=\\\"Scenario name\\\" [(ngModel)]=\\\"scenario.name\\\"/>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <label>Scenario group</label>\\n      </div>\\n      <div class=\\\"col-sm-9\\\">\\n        <select class=\\\"form-control\\\" title=\\\"Scenario group\\\" *ngIf=\\\"project\\\" [compareWith]=\\\"ScenarioSettingsComponent.scenarioGroupCompareFn\\\" [(ngModel)]=\\\"scenario.scenarioGroup\\\">\\n          <option [ngValue]=\\\"null\\\">[no group]</option>\\n          <option *ngFor=\\\"let scenarioGroup of project.scenarioGroups\\\" [ngValue]=\\\"scenarioGroup\\\">{{scenarioGroup.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <label>Before scenario</label>\\n      </div>\\n      <div class=\\\"col-sm-9\\\">\\n        <select class=\\\"form-control\\\" title=\\\"Before scenario\\\" [(ngModel)]=\\\"scenario.beforeScenarioId\\\">\\n          <option [ngValue]=\\\"null\\\">[default from project]</option>\\n          <option *ngFor=\\\"let scenarioItem of scenarioList\\\" [ngValue]=\\\"scenarioItem.id\\\">{{scenarioItem.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <label>Before scenario ignore</label>\\n      </div>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"checkbox\\\" title=\\\"\\\" [(ngModel)]=\\\"scenario.beforeScenarioIgnore\\\"/>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <label>After scenario</label>\\n      </div>\\n      <div class=\\\"col-sm-9\\\">\\n        <select class=\\\"form-control\\\" title=\\\"After scenario\\\" [(ngModel)]=\\\"scenario.afterScenarioId\\\">\\n          <option [ngValue]=\\\"null\\\">[default from project]</option>\\n          <option *ngFor=\\\"let scenarioItem of scenarioList\\\" [ngValue]=\\\"scenarioItem.id\\\">{{scenarioItem.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <label>After scenario ignore</label>\\n      </div>\\n      <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"checkbox\\\" title=\\\"\\\" [(ngModel)]=\\\"scenario.afterScenarioIgnore\\\"/>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/scenario-settings/scenario-settings.component.html\n// module id = ../../../../../src/app/scenario-settings/scenario-settings.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport {Scenario} from '../model/scenario';\nimport {ToastOptions, ToastyService} from 'ng2-toasty';\nimport {ScenarioService} from '../service/scenario.service';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {Project} from '../model/project';\nimport {ProjectService} from '../service/project.service';\nimport {ScenarioGroup} from '../model/scenario-group';\n\n@Component({\n  selector: 'app-scenario-settings',\n  templateUrl: './scenario-settings.component.html',\n  styles: [\n    'input[type=checkbox] { width: 24px; height: 24px; margin: 0; vertical-align: middle; }',\n    '.row { margin-bottom: 7px; }'\n  ]\n})\nexport class ScenarioSettingsComponent implements OnInit {\n\n  scenario: Scenario;\n  project: Project;\n  scenarioList: Scenario[];\n  ScenarioSettingsComponent = ScenarioSettingsComponent;\n\n  toastOptions: ToastOptions = {\n    title: 'Updated',\n    msg: 'Scenario updated',\n    showClose: true,\n    timeout: 5000,\n    theme: 'bootstrap'\n  };\n\n  static scenarioGroupCompareFn(c1: ScenarioGroup, c2: ScenarioGroup): boolean {\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private scenarioService: ScenarioService,\n    private projectService: ProjectService,\n    private toastyService: ToastyService\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .switchMap((params: ParamMap) => this.scenarioService.findOne(+params.get('id')))\n      .subscribe(value => {\n        this.scenario = value;\n\n        this.projectService.findOne(this.scenario.projectId)\n          .subscribe(project => {\n            this.project = project;\n\n            this.projectService.findScenariosByProject(this.project.id)\n              .subscribe(scenarioList => this.scenarioList = scenarioList);\n          });\n      });\n  }\n\n  save(): void {\n    this.scenarioService.saveOne(this.scenario)\n      .subscribe(value => {\n        this.scenario = value;\n        this.toastyService.success(this.toastOptions);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/scenario-settings/scenario-settings.component.ts","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Project} from '../model/project';\r\nimport {Headers, Http, ResponseContentType} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport {Scenario} from '../model/scenario';\r\nimport {Globals} from '../globals';\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n\r\n  public serviceUrl = '/rest/projects';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n\r\n  constructor(\r\n    private globals: Globals,\r\n    private http: Http\r\n  ) { }\r\n\r\n  findAll(): Observable<Project[]> {\r\n    return this.http.get(this.globals.serviceBaseUrl + this.serviceUrl)\r\n      .map(value => value.json() as Project[]);\r\n  }\r\n\r\n  save(project: Project): Observable<Project> {\r\n    return this.http.put(\r\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + project.id,\r\n      project,\r\n      this.headers\r\n    ).map(value => value.json() as Project);\r\n  }\r\n\r\n  findOne(projectId: number): Observable<Project> {\r\n    return this.http.get(this.globals.serviceBaseUrl + this.serviceUrl + '/' + projectId)\r\n      .map(value => value.json() as Project);\r\n  }\r\n\r\n  findScenariosByProject(projectId: number): Observable<Scenario[]> {\r\n    return this.http.get(this.globals.serviceBaseUrl + this.serviceUrl + '/' + projectId + '/scenarios')\r\n      .map(value => value.json() as Scenario[]);\r\n  }\r\n\r\n  createScenario(project: Project, scenario: Scenario): Observable<Scenario> {\r\n    return this.http.post(\r\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + project.id + '/scenarios',\r\n      scenario,\r\n      {headers: this.headers}\r\n    ).map(value => value.json() as Scenario);\r\n  }\r\n\r\n  downloadYaml(project: Project, selectedScenarios: number[]) {\r\n    return this.http.post(\r\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + project.id + '/export-selected-to-yaml',\r\n      selectedScenarios,\r\n      {responseType: ResponseContentType.Blob}\r\n    ).map(value => new Blob([value.blob()]));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/service/project.service.ts","import { Injectable } from '@angular/core';\r\nimport {Scenario} from '../model/scenario';\r\nimport {Headers, Http} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {StepResult} from '../model/step-result';\r\nimport 'rxjs/add/operator/map';\r\nimport {Step} from '../model/step';\r\nimport {Globals} from '../globals';\r\n\r\n@Injectable()\r\nexport class ScenarioService {\r\n\r\n  public serviceUrl = '/rest/scenarios';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n\r\n  constructor(\r\n    private globals: Globals,\r\n    private http: Http\r\n  ) { }\r\n\r\n  run(scenario: Scenario): Observable<StepResult[]> {\r\n    return this.http.post(\r\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + scenario.id + '/exec',\r\n      {},\r\n      {headers: this.headers}\r\n    ).map(value => value.json() as StepResult[]);\r\n  }\r\n\r\n  findOne(scenarioId: number): Observable<Scenario> {\r\n    return this.http.get(this.globals.serviceBaseUrl + this.serviceUrl + '/' + scenarioId)\r\n      .map(value => value.json() as Scenario);\r\n  }\r\n\r\n  findScenarioSteps(scenarioId: number): Observable<Step[]> {\r\n    return this.http.get(this.globals.serviceBaseUrl + this.serviceUrl + '/' + scenarioId + '/steps')\r\n      .map(value => value.json() as Step[]);\r\n  }\r\n\r\n  saveStepList(scenario: Scenario, stepList: Step[]): Observable<Step[]> {\r\n    return this.http.put(\r\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + scenario.id + '/steps',\r\n      stepList,\r\n      {headers: this.headers}\r\n    ).map(value => value.json() as Step[]);\r\n  }\r\n\r\n  saveOne(scenario: Scenario): Observable<Scenario> {\r\n    return this.http.put(\r\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + scenario.id,\r\n      scenario,\r\n      {headers: this.headers}\r\n    ).map(value => value.json() as Scenario);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/service/scenario.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http} from '@angular/http';\nimport {Step} from '../model/step';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs/Observable';\nimport {Globals} from '../globals';\n\n@Injectable()\nexport class StepService {\n\n  public serviceUrl = '/rest/steps';\n  private headers = new Headers({'Content-Type': 'application/json'});\n\n  constructor(\n    private globals: Globals,\n    private http: Http\n  ) { }\n\n  saveStep(step: Step): Observable<Step> {\n    return this.http.put(\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + step.id,\n      step,\n      {headers: this.headers}\n    ).map(value => value.json() as Step);\n  }\n\n  cloneStep(step: Step): Observable<Step> {\n    return this.http.post(\n      this.globals.serviceBaseUrl + this.serviceUrl + '/' + step.id + '/clone',\n      {},\n      {headers: this.headers}\n    ).map(value => value.json() as Step);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/service/step.service.ts","import { Injectable } from '@angular/core';\r\nimport {Http} from '@angular/http';\r\nimport {Globals} from '../globals';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Version} from '../model/version';\r\n\r\n@Injectable()\r\nexport class VersionService {\r\n\r\n  public serviceUrl = '/rest/version';\r\n\r\n  constructor(\r\n    private globals: Globals,\r\n    private http: Http\r\n  ) { }\r\n\r\n  getVersion(): Observable<Version> {\r\n    return this.http.get(this.globals.serviceBaseUrl + this.serviceUrl)\r\n      .map(value => value.json() as Version);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/service/version.service.ts","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"padding-bottom: 30px;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-11\\\">\\r\\n      <input style=\\\"font-weight: bold; border-width: 0; box-shadow: none;\\\" placeholder=\\\"Step description\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"step.stepComment\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1 text-right\\\" *ngIf=\\\"showUpDownDeleteCloneButtons\\\">\\r\\n      <button class=\\\"btn btn-xs btn-block btn-default\\\" (click)=\\\"upStep()\\\"><span class=\\\"glyphicon glyphicon-hand-up\\\"></span> Up</button>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n      <button class=\\\"btn btn-xs btn-block btn-default\\\" (click)=\\\"downStep()\\\"><span class=\\\"glyphicon glyphicon-hand-down\\\"></span> Down</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-btn\\\">\\r\\n          <select class=\\\"form-control\\\" title=\\\"Request method\\\" [(ngModel)]=\\\"step.requestMethod\\\">\\r\\n            <option [ngValue]=\\\"''\\\"></option>\\r\\n            <option [ngValue]=\\\"'POST'\\\">POST</option>\\r\\n            <option [ngValue]=\\\"'GET'\\\">GET</option>\\r\\n            <option [ngValue]=\\\"'PUT'\\\">PUT</option>\\r\\n            <option [ngValue]=\\\"'DELETE'\\\">DELETE</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <input placeholder=\\\"Relative url. Example: /relative/url?parameter=value\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"step.relativeUrl\\\" />\\r\\n        <div class=\\\"input-group-btn\\\">\\r\\n          <button class=\\\"btn btn-default\\\" title=\\\"Delete\\\" *ngIf=\\\"showUpDownDeleteCloneButtons\\\" (click)=\\\"deleteStep()\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span> Delete</button>\\r\\n          <button class=\\\"btn btn-default\\\" title=\\\"Disabled toggle\\\" *ngIf=\\\"!step.disabled\\\" (click)=\\\"disabledToggle()\\\"><span class=\\\"glyphicon glyphicon-flag\\\"></span> Disable</button>\\r\\n          <button class=\\\"btn btn-default\\\" title=\\\"Disabled toggle\\\" style=\\\"color: red;\\\" *ngIf=\\\"step.disabled\\\" (click)=\\\"disabledToggle()\\\"><span class=\\\"glyphicon glyphicon-flag\\\"></span> Disabled</button>\\r\\n          <button class=\\\"btn btn-success\\\" title=\\\"Clone\\\" *ngIf=\\\"showUpDownDeleteCloneButtons && step.id\\\" (click)=\\\"cloneStep()\\\"><span class=\\\"glyphicon glyphicon-paste\\\"></span> Clone</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <ul class=\\\"nav nav-tabs\\\">\\r\\n        <li [class.active]=\\\"tab == 'summary'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('summary')\\\">Summary</a></li>\\r\\n        <li [class.active]=\\\"tab == 'details'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('details')\\\">Details</a></li>\\r\\n        <li [class.active]=\\\"tab == 'savedValues'\\\">\\r\\n          <a href=\\\"#\\\" (click)=\\\"selectTab('savedValues')\\\">Saved values <span *ngIf=\\\"step.jsonXPath || Object.keys(step.savedValuesCheck).length\\\" class=\\\"glyphicon glyphicon-tag\\\"></span></a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"tab == 'headers'\\\">\\r\\n          <a href=\\\"#\\\" (click)=\\\"selectTab('headers')\\\">Headers <span *ngIf=\\\"step.requestHeaders\\\" class=\\\"glyphicon glyphicon-tag\\\"></span></a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"tab == 'sql'\\\">\\r\\n          <a href=\\\"#\\\" (click)=\\\"selectTab('sql')\\\">Sql <span *ngIf=\\\"step.sql || step.sqlSavedParameter\\\" class=\\\"glyphicon glyphicon-tag\\\"></span></a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"tab == 'mockServiceResponse'\\\">\\r\\n          <a href=\\\"#\\\" (click)=\\\"selectTab('mockServiceResponse')\\\">Mock responses <span *ngIf=\\\"step.mockServiceResponseList && step.mockServiceResponseList.length != 0\\\" class=\\\"glyphicon glyphicon-tag\\\"></span></a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"tab == 'expectedServiceRequestList'\\\">\\r\\n          <a href=\\\"#\\\" (click)=\\\"selectTab('expectedServiceRequestList')\\\">Expected mock requests <span *ngIf=\\\"step.expectedServiceRequestList && step.expectedServiceRequestList.length != 0\\\" class=\\\"glyphicon glyphicon-tag\\\"></span></a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"tab == 'polling'\\\">\\r\\n          <a href=\\\"#\\\" (click)=\\\"selectTab('polling')\\\">Polling <span *ngIf=\\\"step.usePolling\\\" class=\\\"glyphicon glyphicon-tag\\\"></span></a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"tab == 'parameterSet'\\\">\\r\\n          <a href=\\\"#\\\" (click)=\\\"selectTab('parameterSet')\\\">Test cases <span *ngIf=\\\"step.stepParameterSetList && step.stepParameterSetList.length != 0\\\" class=\\\"glyphicon glyphicon-tag\\\"></span></a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"tab == 'json'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('json')\\\">json</a></li>\\r\\n      </ul>\\r\\n      <div class=\\\"tab-content\\\" style=\\\"padding: 10px;\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"tab == 'summary'\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <textarea title=\\\"Request body\\\" class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"step.request\\\"></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <textarea title=\\\"Expected response\\\" class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"step.expectedResponse\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"tab == 'details' || tab == 'all'\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12\\\">\\r\\n                <label>Request body type</label>\\r\\n                <select class=\\\"form-control\\\" title=\\\"Request body type\\\" [(ngModel)]=\\\"step.requestBodyType\\\">\\r\\n                  <option [ngValue]=\\\"'JSON'\\\">JSON request body (default)</option>\\r\\n                  <option [ngValue]=\\\"'FORM'\\\">FORM-data request body</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <label>Request body</label>\\r\\n            <textarea title=\\\"Request body\\\" class=\\\"form-control\\\" rows=\\\"10\\\" [(ngModel)]=\\\"step.request\\\"></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\" style=\\\"text-align: center; padding-top: 10px;\\\">\\r\\n                <label>\\r\\n                  <input title=\\\"\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"step.expectedResponseIgnore\\\"><br/>\\r\\n                  Ignore response\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <label>Expected status code</label>\\r\\n                <input title=\\\"\\\" placeholder=\\\"Example: 200, 404, 500, [empty]\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"step.expectedStatusCode\\\"/>\\r\\n              </div>\\r\\n            </div>\\r\\n            <label>Expected response</label>\\r\\n            <textarea title=\\\"Expected response\\\" class=\\\"form-control\\\" rows=\\\"10\\\" [(ngModel)]=\\\"step.expectedResponse\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'savedValues' || tab == 'all'\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <label>Expected response</label>\\r\\n              <textarea title=\\\"Expected response\\\" class=\\\"form-control\\\" rows=\\\"13\\\" [(ngModel)]=\\\"step.expectedResponse\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <label>Saved values (JSON XPath):</label>\\r\\n              <textarea placeholder=\\\"parameterName = $.element.items[2].title\\\" rows=\\\"13\\\" title=\\\"Request headers\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"step.jsonXPath\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'headers' || tab == 'all'\\\">\\r\\n          <label>Request headers:</label>\\r\\n          <textarea placeholder=\\\"HeaderName: headerValue\\\" rows=\\\"5\\\" title=\\\"Request headers\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"step.requestHeaders\\\"></textarea>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'sql' || tab == 'all'\\\">\\r\\n          <label>Sql parameters</label>\\r\\n          <input placeholder=\\\"paramNameFirst, paramNameSecond\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"step.sqlSavedParameter\\\"/>\\r\\n          <label>Sql query</label>\\r\\n          <input placeholder=\\\"select fieldFirst, fieldSecond from myTable\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"step.sql\\\"/>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'mockServiceResponse' || tab == 'all'\\\">\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let mockServiceResponse of step.mockServiceResponseList\\\">\\r\\n            <div class=\\\"col-sm-1\\\">\\r\\n              <button class=\\\"btn btn-sm btn-default\\\" style=\\\"line-height: 1.9;\\\" (click)=\\\"removeMockServiceResponse(mockServiceResponse)\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span> Remove</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-11\\\">\\r\\n              <app-mock-service-response [mockServiceResponse]=\\\"mockServiceResponse\\\"></app-mock-service-response>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-sm btn-default\\\" (click)=\\\"addMockServiceResponse()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add mock</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'expectedServiceRequestList' || tab == 'all'\\\">\\r\\n          <div class=\\\"row\\\" style=\\\"margin-bottom: 40px;\\\" *ngFor=\\\"let expectedServiceRequest of step.expectedServiceRequestList\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n                <input placeholder=\\\"Service name *\\\" class=\\\"form-control\\\" title=\\\"\\\" [style.border-color]=\\\"expectedServiceRequest.serviceName ? '' : 'red'\\\" [(ngModel)]=\\\"expectedServiceRequest.serviceName\\\"/>\\r\\n                <span class=\\\"input-group-btn\\\">\\r\\n                  <button class=\\\"btn\\\" (click)=\\\"removeExpectedServiceRequest(expectedServiceRequest)\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span> Remove</button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Ignored tags\\\" style=\\\"margin-bottom: 5px;\\\" title=\\\"\\\" [(ngModel)]=\\\"expectedServiceRequest.ignoredTags\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                  <input placeholder=\\\"Sort\\\" class=\\\"form-control\\\" title=\\\"\\\" [(ngModel)]=\\\"expectedServiceRequest.sort\\\"/>\\r\\n                </div>\\r\\n              </div>\\r\\n              <textarea class=\\\"form-control\\\" placeholder=\\\"Expected request\\\" title=\\\"\\\" rows=\\\"7\\\" [(ngModel)]=\\\"expectedServiceRequest.expectedServiceRequest\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-default\\\" (click)=\\\"addExpectedServiceRequest()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add expected mock request</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'polling' || tab == 'all'\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <label>\\r\\n                <input type=\\\"checkbox\\\" title=\\\"Use polling\\\" [(ngModel)]=\\\"step.usePolling\\\"/>\\r\\n                Use polling\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <label>Polling json xpath:</label>\\r\\n              <input placeholder=\\\"$.body.items\\\" class=\\\"form-control\\\" title=\\\"Polling json xpath\\\" [(ngModel)]=\\\"step.pollingJsonXPath\\\" />\\r\\n              <div class=\\\"help-block\\\">Waiting for json element exists. Example: $.body.items</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'parameterSet' || tab == 'all'\\\">\\r\\n          <app-step-parameter-set [stepParameterSetList]=\\\"step.stepParameterSetList\\\"></app-step-parameter-set>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"tab == 'json'\\\"><pre>{{step | json}}</pre></div>\\r\\n        <div *ngIf=\\\"tab == 'savedValues' || tab == 'sql' || tab == 'all'\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <hr/>\\r\\n              <label>Check saved values</label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let checkedValueName of Object.keys(step.savedValuesCheck)\\\">\\r\\n            <div class=\\\"col-sm-4\\\" style=\\\"text-align: right;\\\">\\r\\n              <label>\\r\\n                <a href=\\\"#\\\" (click)=\\\"updateCheckedValueName(checkedValueName)\\\">{{checkedValueName}} <small><span class=\\\"glyphicon glyphicon-edit\\\"></span></small></a>\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input placeholder=\\\"Checked value\\\" title=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"step.savedValuesCheck[checkedValueName]\\\"/>\\r\\n                <span class=\\\"input-group-btn\\\">\\r\\n                  <button class=\\\"btn btn-default\\\" (click)=\\\"removeCheckedValue(checkedValueName)\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span> Remove</button>\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <button class=\\\"btn btn-default\\\" (click)=\\\"addCheckedValue()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/step-item/step-item.component.html\n// module id = ../../../../../src/app/step-item/step-item.component.html\n// module chunks = 1","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Step} from '../model/step';\r\nimport {MockServiceResponse} from '../model/mock-service-response';\r\nimport {ToastOptions, ToastyService} from 'ng2-toasty';\r\nimport {ExpectedServiceRequest} from '../model/expected-service-request';\r\n\r\n@Component({\r\n  selector: 'app-step-item',\r\n  templateUrl: './step-item.component.html',\r\n  styles: [\r\n    '.nav-tabs > li > a { padding-top: 3px; padding-bottom: 3px; }',\r\n    '.tab-content { border: 1px solid #ddd; border-top-width: 0;}',\r\n    '.row { margin-bottom: 5px; }',\r\n    '.input-group-btn > select { padding: 0; width: 85px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-right: 0; }'\r\n  ]\r\n})\r\nexport class StepItemComponent implements OnInit {\r\n\r\n  @Input()\r\n  step: Step;\r\n  @Input()\r\n  showUpDownDeleteCloneButtons: Boolean;\r\n\r\n  @Output() onDeleteClick = new EventEmitter<any>();\r\n  @Output() onUpClick = new EventEmitter<any>();\r\n  @Output() onDownClick = new EventEmitter<any>();\r\n  @Output() onCloneClick = new EventEmitter<any>();\r\n\r\n  Object = Object;\r\n\r\n  tab = 'summary';\r\n  toastOptions: ToastOptions = {\r\n    title: 'Warning',\r\n    msg: 'Checked variable already exists',\r\n    showClose: true,\r\n    timeout: 15000,\r\n    theme: 'bootstrap'\r\n  };\r\n\r\n  constructor(\r\n    private toastyService: ToastyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectTab(tabName: string) {\r\n    this.tab = tabName;\r\n    return false;\r\n  }\r\n\r\n  addMockServiceResponse() {\r\n    if (!this.step.mockServiceResponseList) {\r\n      this.step.mockServiceResponseList = [];\r\n    }\r\n    this.step.mockServiceResponseList.push(new MockServiceResponse());\r\n  }\r\n\r\n  removeMockServiceResponse(mockServiceResponse: MockServiceResponse) {\r\n    if (confirm('Confirm: remove mock response')) {\r\n      const indexToRemove = this.step.mockServiceResponseList.indexOf(mockServiceResponse);\r\n      if (indexToRemove > -1) {\r\n        this.step.mockServiceResponseList.splice(indexToRemove, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateCheckedValueName(oldCheckedValueName: string): boolean {\r\n    let newName: string;\r\n    if (newName = prompt('New parameter name', oldCheckedValueName)) {\r\n      if (newName !== oldCheckedValueName) {\r\n        if (!this.step.savedValuesCheck[newName]) {\r\n          Object.defineProperty(this.step.savedValuesCheck, newName,\r\n            Object.getOwnPropertyDescriptor(this.step.savedValuesCheck, oldCheckedValueName));\r\n          delete this.step.savedValuesCheck[oldCheckedValueName];\r\n        } else {\r\n          this.toastyService.warning(this.toastOptions);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addCheckedValue() {\r\n    let newName: string;\r\n    if (newName = prompt('New parameter name')) {\r\n      if (!this.step.savedValuesCheck) {\r\n        this.step.savedValuesCheck = {};\r\n      }\r\n      if (!this.step.savedValuesCheck[newName]) {\r\n        this.step.savedValuesCheck[newName] = '';\r\n      } else {\r\n        this.toastyService.warning(this.toastOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCheckedValue(checkedValueName: string) {\r\n    delete this.step.savedValuesCheck[checkedValueName];\r\n  }\r\n\r\n  addExpectedServiceRequest() {\r\n    if (!this.step.expectedServiceRequestList) {\r\n      this.step.expectedServiceRequestList = [];\r\n    }\r\n    const newItem = new ExpectedServiceRequest();\r\n    const maxSort = Math.max.apply(null, this.step.expectedServiceRequestList.map(value => value.sort));\r\n    newItem.sort = Number.isInteger(maxSort) ? maxSort + 50 : 50;\r\n\r\n    this.step.expectedServiceRequestList.push(newItem);\r\n  }\r\n\r\n  removeExpectedServiceRequest(expectedServiceRequest: ExpectedServiceRequest) {\r\n    if (confirm('Confirm: remove expected service request')) {\r\n      const indexToRemove = this.step.expectedServiceRequestList.indexOf(expectedServiceRequest);\r\n      if (indexToRemove > -1) {\r\n        this.step.expectedServiceRequestList.splice(indexToRemove, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteStep() {\r\n    this.onDeleteClick.emit({step: this.step});\r\n  }\r\n\r\n  disabledToggle() {\r\n    this.step.disabled = !this.step.disabled;\r\n  }\r\n\r\n  upStep() {\r\n    this.onUpClick.emit();\r\n  }\r\n\r\n  downStep() {\r\n    this.onDownClick.emit();\r\n  }\r\n\r\n  cloneStep() {\r\n    this.onCloneClick.emit();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/step-item/step-item.component.ts","module.exports = \"<div *ngIf=\\\"stepParameterSetList\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n      <tr>\\n        <th></th>\\n        <th *ngFor=\\\"let parameterName of parameterNameList\\\">\\n          <label><a href=\\\"#\\\" (click)=\\\"updateParameterName(parameterName)\\\">{{parameterName}} <small><span class=\\\"glyphicon glyphicon-edit\\\"></span></small></a></label>\\n        </th>\\n        <th>\\n          <button class=\\\"btn btn-sm btn-default\\\" (click)=\\\"addParameterName()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button>\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let stepParameterSet of stepParameterSetList\\\">\\n        <th>\\n          <input title=\\\"\\\" placeholder=\\\"Case description\\\" class=\\\"form-control no-border\\\" [(ngModel)]=\\\"stepParameterSet.description\\\" />\\n        </th>\\n        <td *ngFor=\\\"let parameterName of parameterNameList\\\">\\n          <ng-container *ngIf=\\\"findParameter(stepParameterSet, parameterName)\\\">\\n            <input title=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"findParameter(stepParameterSet, parameterName).value\\\"/>\\n          </ng-container>\\n        </td>\\n        <td>\\n          <button class=\\\"btn btn-sm btn-default\\\" (click)=\\\"removeParameterSet(stepParameterSet)\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span></button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <button class=\\\"btn btn-default\\\" (click)=\\\"addParameterSet()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add case</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/step-parameter-set/step-parameter-set.component.html\n// module id = ../../../../../src/app/step-parameter-set/step-parameter-set.component.html\n// module chunks = 1","import {Component, Input, OnInit} from '@angular/core';\r\nimport {StepParameterSet} from '../model/step-parameter-set';\r\nimport {StepParameter} from '../model/step-parameter';\r\nimport {ToastOptions, ToastyService} from 'ng2-toasty';\r\n\r\n@Component({\r\n  selector: 'app-step-parameter-set',\r\n  templateUrl: './step-parameter-set.component.html',\r\n  styles: [\r\n    '.no-border { border: 0; box-shadow: none; }'\r\n  ]\r\n})\r\nexport class StepParameterSetComponent implements OnInit {\r\n\r\n  @Input()\r\n  stepParameterSetList: StepParameterSet[];\r\n\r\n  parameterNameList: string[];\r\n  toastOptions: ToastOptions = {\r\n    title: 'Warning',\r\n    msg: 'Parameter name already exists',\r\n    showClose: true,\r\n    timeout: 15000,\r\n    theme: 'bootstrap'\r\n  };\r\n\r\n  constructor(\r\n    private toastyService: ToastyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.parameterNameList = [];\r\n    this.stepParameterSetList\r\n      .forEach(parameterSet => parameterSet.stepParameterList\r\n        .filter(parameter => !this.parameterNameList.find(value => value === parameter.name) && parameter.name != null)\r\n        .forEach(parameter => this.parameterNameList.push(parameter.name)));\r\n    this.parameterNameList = this.parameterNameList.sort((a, b) => a < b ? -1 : (a > b ? 1 : 0))\r\n  }\r\n\r\n  findParameter(stepParameterSet: StepParameterSet, parameterName: string): StepParameter {\r\n    if (!stepParameterSet.stepParameterList) {\r\n      stepParameterSet.stepParameterList = [];\r\n    }\r\n    const filtered = stepParameterSet.stepParameterList.filter(parameter => parameter.name === parameterName);\r\n    return filtered.length > 0 ? filtered[0] : null;\r\n  }\r\n\r\n  addParameterSet(): void {\r\n    const newStepParameterSet = new StepParameterSet();\r\n    newStepParameterSet.stepParameterList = this.parameterNameList.map(parameterName => new StepParameter(parameterName));\r\n    this.stepParameterSetList.push(newStepParameterSet);\r\n  }\r\n\r\n  addParameterName(): void {\r\n    let newName: string;\r\n    if (newName = prompt('New parameter name')) {\r\n      if (this.isParameterNameExists(newName)) {\r\n        this.toastyService.warning(this.toastOptions);\r\n      } else {\r\n        this.stepParameterSetList.forEach(value => value.stepParameterList.push(new StepParameter(newName)));\r\n        this.parameterNameList.push(newName);\r\n        this.parameterNameList = this.parameterNameList.sort((a, b) => a < b ? -1 : (a > b ? 1 : 0))\r\n      }\r\n    }\r\n  }\r\n\r\n  updateParameterName(oldParameterName: string): boolean {\r\n    let newName: string;\r\n    if (newName = prompt('New parameter name', oldParameterName)) {\r\n      if (this.isParameterNameExists(newName)) {\r\n        this.toastyService.warning(this.toastOptions);\r\n      } else {\r\n        this.stepParameterSetList\r\n          .forEach(parameterSet => parameterSet.stepParameterList\r\n            .filter(parameter => parameter.name === oldParameterName)\r\n            .forEach(value => value.name = newName));\r\n        this.parameterNameList = this.parameterNameList\r\n          .map(parameterName => parameterName === oldParameterName ? newName : parameterName);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isParameterNameExists(newName: string): boolean {\r\n    return this.stepParameterSetList\r\n      .find(parameterSet => parameterSet.stepParameterList\r\n        .find(parameter => parameter.name === newName) != null) != null;\r\n  }\r\n\r\n  removeParameterSet(stepParameterSet: StepParameterSet): void {\r\n    const indexToRemove = this.stepParameterSetList.indexOf(stepParameterSet);\r\n    if (indexToRemove > -1) {\r\n      this.stepParameterSetList.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/step-parameter-set/step-parameter-set.component.ts","module.exports = \"<div class=\\\"form-group\\\" >\\n  <div class=\\\"col-sm-1\\\">\\n    <span class=\\\"glyphicon glyphicon-ok-circle\\\" style=\\\"color: green;\\\" *ngIf=\\\"stepResult.result == 'OK'\\\"></span>\\n    <span class=\\\"glyphicon glyphicon-remove-circle\\\" style=\\\"color: red;\\\" *ngIf=\\\"stepResult.result != 'OK'\\\"></span>\\n    {{stepResult.result}}\\n  </div>\\n  <div style=\\\"color: gray;\\\" class=\\\"col-sm-11\\\">{{stepResult.step.stepComment}} {{stepResult.description}}</div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"col-sm-11 col-sm-offset-1\\\">\\n    {{stepResult.step.requestMethod}}\\n    {{stepResult.requestUrl}}\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"col-sm-11 col-sm-offset-1\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n      <li [class.active]=\\\"tab == 'summary'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('summary')\\\">Summary</a></li>\\n      <li [class.active]=\\\"tab == 'details'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('details')\\\">Details</a></li>\\n      <li [class.active]=\\\"tab == 'stepEdit'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('stepEdit')\\\">Edit step</a></li>\\n      <li [class.active]=\\\"tab == 'json'\\\"><a href=\\\"#\\\" (click)=\\\"selectTab('json')\\\">json</a></li>\\n    </ul>\\n    <div class=\\\"tab-content\\\" style=\\\"padding: 10px;\\\">\\n      <div class=\\\"help-block\\\" *ngIf=\\\"tab == 'summary' || tab == 'all'\\\">\\n        Test id: {{stepResult.testId}}\\n      </div>\\n      <div *ngIf=\\\"tab == 'details' || tab == 'all'\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12\\\" style=\\\"color: gray;\\\">\\n            <div *ngIf=\\\"stepResult.pollingRetryCount > 1\\\">Polling retry count: {{stepResult.pollingRetryCount}}</div>\\n            Saved parameters: {{stepResult.savedParameters}}\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"col-sm-12\\\">\\n            <label>Request body</label>\\n            <div class=\\\"form-control\\\" style=\\\"overflow: scroll; height: 180px; white-space: pre; background-color: #eee;\\\">{{stepResult.requestBody}}</div>\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"col-sm-6\\\">\\n            <label>Actual</label>\\n            <div class=\\\"form-control\\\" style=\\\"overflow: scroll; height: 180px; white-space: pre; background-color: #eee;\\\">{{stepResult.actual}}</div>\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n            <label>Expected</label>\\n            <div class=\\\"form-control\\\" style=\\\"overflow: scroll; height: 180px; white-space: pre; background-color: #eee;\\\">{{stepResult.expected}}</div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\" style=\\\"color: gray;\\\">\\n            <label>Details</label>\\n            <pre>{{stepResult.details}}</pre>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"tab == 'json' || tab == 'all'\\\">\\n        <pre>{{stepResult | json}}</pre>\\n      </div>\\n      <div *ngIf=\\\"tab == 'stepEdit' || tab == 'all'\\\">\\n        <app-step-item [step]=\\\"stepResult.step\\\"></app-step-item>\\n        <button class=\\\"btn btn-xs btn-success\\\" (click)=\\\"saveStep()\\\">Save step</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/projects/AT/autotester-ui/src/app/step-result-item/step-result-item.component.html\n// module id = ../../../../../src/app/step-result-item/step-result-item.component.html\n// module chunks = 1","import {Component, Input, OnInit} from '@angular/core';\nimport {StepResult} from '../model/step-result';\nimport {StepService} from '../service/step.service';\nimport {ToastOptions, ToastyService} from 'ng2-toasty';\n\n@Component({\n  selector: 'app-step-result-item',\n  templateUrl: './step-result-item.component.html',\n  styles: [\n    '.nav-tabs > li > a { padding-top: 3px; padding-bottom: 3px; }',\n    '.tab-content { border: 1px solid #ddd; border-top-width: 0;}',\n    '.row { margin-bottom: 5px; }',\n    '.input-group-btn > select { padding: 0; width: 85px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-right: 0; }'\n  ]\n})\nexport class StepResultItemComponent implements OnInit {\n\n  @Input()\n  stepResult: StepResult;\n\n  tab = 'summary';\n\n  constructor(\n    private stepService: StepService,\n    private toastyService: ToastyService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  selectTab(tabName: string) {\n    this.tab = tabName;\n    return false;\n  }\n\n  saveStep() {\n    this.stepService.saveStep(this.stepResult.step)\n      .subscribe(() => {\n        const toastOptions: ToastOptions = {\n          title: 'Updated',\n          msg: 'Step updated',\n          showClose: true,\n          timeout: 5000,\n          theme: 'bootstrap'\n        };\n        this.toastyService.success(toastOptions);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/app/step-result-item/step-result-item.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/projects/AT/autotester-ui/src/main.ts"],"sourceRoot":"webpack:///"}